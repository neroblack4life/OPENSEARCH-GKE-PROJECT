input {
    google_pubsub {
        project_id => "fast-planet-238810"
        # topic => "projects/fast-planet-238810/topics/cdp-application-topic"
        # subscription => "projects/fast-planet-238810/subscriptions/cdp-application-topic-sub"
        topic => "cdp-application-topic"
        subscription => "cdp-application-topic-sub"
        json_key_file => "/etc/logstash/gcp-credentials.json"
        create_subscription => false
        tags => ["cdp-application"]
    }
    google_pubsub {
        project_id => "fast-planet-238810"
        # topic => "projects/fast-planet-238810/topics/rise-application-topic"
        # subscription => "projects/fast-planet-238810/subscriptions/rise-application-topic-sub"
        topic => "rise-application-topic"
        subscription => "rise-application-topic-sub"
        json_key_file => "/etc/logstash/gcp-credentials.json"
        create_subscription => false
        tags => ["rise-application"]
    }
    google_pubsub {
        project_id => "fast-planet-238810"
        # topic => "projects/fast-planet-238810/topics/risk-application-topic"
        # subscription => "projects/fast-planet-238810/subscriptions/risk-application-topic-sub"
        topic => "risk-application-topic"
        subscription => "risk-application-topic-sub"
        json_key_file => "/etc/logstash/gcp-credentials.json"
        create_subscription => false
        tags => ["risk-application"]
    }
}

filter {
  
    # Example conditional filter based on tags
    if "cdp-application" in [tags] {
        # Add specific filters for RISE events
        grok {
            match => { "message" => "%{COMBINEDAPACHELOG}"}
        }
        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
            target => "@timestamp"
        }
        mutate {
            add_field => { "source_topic" => "cdp-application-topic" }
        }
    } else if "risk-application" in [tags] {
        # Add specific filters for RISK events
        grok {
            match => { "message" => "%{COMBINEDAPACHELOG}"}
        }
        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
            target => "@timestamp"
        }
        mutate {
            add_field => { "source_topic" => "risk-application-topic" }
        }
    } else if "rise-application" in [tags] {
        # Add specific filters for CDP events
                grok {
            match => { "message" => "%{COMBINEDAPACHELOG}"}
        }
        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
            target => "@timestamp"
        }
        mutate {
            add_field => { "source_topic" => "rise-application-topic" }
        }
    }
}

output {
    if "cdp-application" in [tags] {
        opensearch {
            hosts => ["${OPENSEARCH_HOST}"]
            index => "cdp-application-%{+YYYY.MM.dd}"
            user => "${OPENSEARCH_USER}"
            password => "${OPENSEARCH_PASSWORD}"
            ssl => false
            ssl_certificate_verification => false
        }
    } else if "risk-application" in [tags] {
        opensearch {
            hosts => ["${OPENSEARCH_HOST}"]
            index => "risk-application-%{+YYYY.MM.dd}"
            user => "${OPENSEARCH_USER}"
            password => "${OPENSEARCH_PASSWORD}"
            ssl => false
            ssl_certificate_verification => false
        }
    } else if "rise-application" in [tags] {
        opensearch {
            hosts => ["${OPENSEARCH_HOST}"]
            index => "rise-application-%{+YYYY.MM.dd}"
            user => "${OPENSEARCH_USER}"
            password => "${OPENSEARCH_PASSWORD}"
            ssl => false
            ssl_certificate_verification => false
        }
    }
}







# input {
#   google_pubsub {
#     project_id => "fast-planet-238810"
#     topic => "projects/Central-Logging-Project/topics/LoggingTopic"
#     subscription => "projects/fast-planet-238810/subscriptions/opensearch-logsink-sub"
#     json_key_file => "/etc/logstash/gcp-credentials.json"
#     create_subscription => false
#   }
# }

# filter {
#   grok {
#     match => { "message" => "%{COMBINEDAPACHELOG}"}
#   }
#   date {
#     match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
#     target => "@timestamp"
#   }
#   mutate {
#     remove_field => [ "timestamp" ]
#   }

# }

# output {
#   opensearch {
#     hosts => ["http://OPENSEARCH_CLUSTER_IP:9200"]
#     user => "admin"
#     password => "Neroblack419$"
#     ssl => false
#     ssl_certificate_verification => false
#     index => "logstash-%{+YYYY.MM.dd}"
#   }
#   opensearch {
#     hosts => ["http://OPENSEARCH_CLUSTER_IP:9200"]  # Replace with your OpenSearch host(s)
#     index => "apache-logs-index"
#     user => "admin"  # Replace with your OpenSearch username
#     password => "Neroblack419$"  # Replace with your OpenSearch password
#     ssl => false  # Set to true if using SSL
#     ssl_certificate_verification => false  # Set to true if you want to verify the SSL certificate
#  }
#   stdout {
#     codec => rubydebug
#    }
 
# }